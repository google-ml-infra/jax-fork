name: "Wait For Connection"
description: 'Action to wait for connection from user'
inputs:
  halt-dispatch-input:
    description: 'Should the action wait for user connection from workflow_dispatch'
    required: false
    default: "0"
  should-wait-retry-tag:
    description: "Tag that will flag action to wait on reruns if present"
    required: false
    default: "CI Connection Halt - On Retry"
  should-wait-always-tag:
    description: "Tag that will flag action to wait on reruns if present"
    required: false
    default: "CI Connection Halt - Always"
  repository:
      description: 'Repository name with owner. For example, actions/checkout'
      default: ${{ github.repository }}
runs:
  using: "composite"
  steps:
  - name: Get current labels
    shell: bash
    id: get-labels
    run: |
      # Fetch labels using GitHub API
      labels=$(curl -sL \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels)

      # Extract label names using jq
      #labels=$(echo "$response" | jq -r '.[].name' | paste -sd "," -)

      # Set the labels as an output
      echo "labels=$labels" >> $GITHUB_OUTPUT

  - name: Print halt conditions
    shell: bash
    run: |
      echo "All labels: ${{ steps.get-labels.outputs.labels }}"
      echo "Halt retry tag: ${{ inputs.should-wait-retry-tag }}"
      echo "Halt always tag: ${{ inputs.should-wait-always-tag }}"
      echo "Should halt input: ${{ inputs.halt-dispatch-input }}"
      echo "Reattempt count: ${{ github.run_attempt }}"
      echo "PR number: ${{ github.event.pull_request.number }}"

  - name: Halt For Connection
    shell: bash
    if: |
      contains(steps.get-labels.outputs.labels, inputs.should-wait-retry-tag) && github.run_attempt > 1 ||
      contains(steps.get-labels.outputs.labels, inputs.should-wait-always-tag) ||
      inputs.halt-dispatch-input == 'yes'
    env:
      REPOSITORY: ${{ inputs.repository }}
      INTERACTIVE_CI: 1 
      PYTHONUNBUFFERED: 1
    run: |
      echo "$GITHUB_ACTION_PATH"
      python3 $GITHUB_ACTION_PATH/wait_for_connection.py
