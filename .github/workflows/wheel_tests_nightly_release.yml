name: CI - Wheel Tests (Nightly/Release)

on:
  workflow_dispatch:
    inputs:
      gcs_download_uri:
        description: "GCS location URI from where the artifacts should be downloaded"
        required: true
        default: 'gs://jax-nightly-release-transient/nightly/latest'
        type: string


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs: 
  run_pytest_cpu:
    uses: ./.github/workflows/pytest_cpu.yml      
    strategy:
        fail-fast: false # don't cancel all jobs on failure
        matrix:
          # Runner OS and Python values need to match the matrix stategy in the build_jaxlib_artifact job above
          runner: ["linux-x86-n2-64", "linux-arm64-t2a-48", "windows-x86-n2-64"]
          python: ["3.10","3.11", "3.12", "3.13"]
          enable-x64: [0]
    with:
      runner: ${{ matrix.runner }}
      python: ${{ matrix.python }}
      enable-x64:  ${{ matrix.enable-x64 }}
      gcs_download_uri: ${{inputs.gcs_download_uri}}


  run_pytest_gpu:
    uses: ./.github/workflows/pytest_cuda.yml      
    strategy:
        fail-fast: false # don't cancel all jobs on failure
        matrix:
          # Python values need to match the matrix stategy in the build artifacts job above
          # TODO(srnitin): Add the h100 runner when we switch to using the jax-ml/jax
          # repo.
          runner: ["linux-x86-g2-48-l4-4gpu",]
          python: ["3.10","3.11", "3.12", "3.13"]
          cuda: ["12.3", "12.1"]
          enable-x64: [0]
    with:
      runner: ${{ matrix.runner }}
      python: ${{ matrix.python }}
      cuda:  ${{ matrix.cuda }}
      enable-x64:  ${{ matrix.enable-x64 }}
      gcs_download_uri: ${{inputs.gcs_download_uri}}