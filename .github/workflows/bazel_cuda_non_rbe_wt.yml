name: CI - Bazel CUDA (non-RBE)

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      halt-for-connection:
        description: 'Should this workflow run wait for a remote connection?'
        type: choice
        required: true
        default: 'no'
        options:
        - 'yes'
        - 'no'
  workflow_call:
    inputs:
      runner:
        description: "Which runner should the workflow run on?"
        type: string
        required: true
        default: "linux-x86-n2-16"
      python:
        description: "Which python version to test?"
        type: string
        required: true
        default: "3.12"
      enable-x64:
        description: "Should x64 mode be enabled?"
        type: string
        required: true
        default: "0"
      gcs_download_uri:
        description: "GCS location URI from where the artifacts should be downloaded"
        required: true
        default: 'gs://general-ml-ci-transient/jax-github-actions/jax-fork/${{ github.workflow }}/${{ github.run_number }}'
        type: string


jobs:
  run-tests:
    runs-on: ${{ inputs.runner }}

    container: "us-central1-docker.pkg.dev/tensorflow-sigs/tensorflow/ml-build-rbe:latest"

    env:
      JAXCI_HERMETIC_PYTHON_VERSION: "${{ inputs.python }}"
      JAXCI_ENABLE_X64: "${{ inputs.enable-x64 }}"

    name: "Bazel single accelerator and multi-accelerator GPU tests (Non RBE, ${{ inputs.runner }}, Python 3.11, x64=${{ inputs.enable-x64 }})"

    steps:
      - uses: actions/checkout@v3
      # Halt for testing
      - name: Wait For Connection
        uses: google-ml-infra/actions/ci_connection@main
        with:
          halt-dispatch-input: ${{ inputs.halt-for-connection }}
      - name: Set PLATFORM env var for use in artifact download URL
        run: |
          os=$(uname -s | awk '{print tolower($0)}')
          arch=$(uname -m)
          
          # Get the major and minor version of Python.
          # E.g if JAXCI_HERMETIC_PYTHON_VERSION=3.10, then python_major_minor=310
          echo 
          python_major_minor="${JAXCI_HERMETIC_PYTHON_VERSION//./}"

          echo "OS=${os}" >> $GITHUB_ENV
          echo "ARCH=${arch}" >> $GITHUB_ENV
          echo "PYTHON_MAJOR_MINOR=${python_major_minor}" >> $GITHUB_ENV
      - name: Download the wheel artifacts from GCS
        run: mkdir -p $(pwd)/dist && gsutil -m cp -r "${{ inputs.gcs_download_uri }}"/*${PYTHON_MAJOR_MINOR}*${OS}*${ARCH}*.whl $(pwd)/dist/
      - name: Run Bazel tests
        run: ./ci/run_bazel_test_gpu_non_rbe.sh 
