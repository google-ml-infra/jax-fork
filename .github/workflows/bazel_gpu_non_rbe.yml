name: Run Bazel GPU tests (non RBE)

on:
  pull_request:
    branches:
      - main
defaults:
  run:
    # The default `sh` shell doesn't have the ERR trap status
    shell: bash
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    strategy:
      matrix:
        runner: ["linux-x86-g2-16-l4-1gpu"]
        someOther: ["1","2"]

    runs-on: ${{ matrix.runner }}
    container:
      image: "us-central1-docker.pkg.dev/tensorflow-sigs/tensorflow/ml-build:latest"

    env:
      # GitHub actions run in Docker by defaut. Disable running the `setup_docker.sh` script.
      JAXCI_RUN_DOCKER_CONTAINER: 0
      JAXCI_CLONE_MAIN_XLA: 1
      JAXCI_HERMETIC_PYTHON_VERSION: 3.11

    steps:
      - uses: actions/checkout@v3
      # Halt for testing
      - name: Wait For Connection
        uses: google-ml-infra/actions/ci_connection@output-halt-location
        id: wait-for-connection
      - name: Nvidia smi
        run: |
          echo "${{ steps.wait-for-connection.outputs.halt-trap-script }}"
          trap 'PYTHONUNBUFFERED=1 python ${{ steps.wait-for-connection.outputs.halt-trap-script }} --shell-command "$BASH_COMMAND"; exit $?' ERR
          nvidia-smi
          ls fake_directory_that_does_not_exist
      - name: Build jaxlib
        run: ./ci/build_artifacts.sh "ci/envs/build_artifacts/jaxlib.env"
      - name: Build jax-cuda-plugin
        run: ./ci/build_artifacts.sh "ci/envs/build_artifacts/jax-cuda-plugin.env"
      - name: Build jax-cuda-pjrt
        run: ./ci/build_artifacts.sh "ci/envs/build_artifacts/jax-cuda-pjrt.env"
      - name: Run Bazel GPU tests locally
        run: ./ci/run_bazel_test.sh "ci/envs/run_tests/bazel_gpu_non_rbe.env"
      - name: Test if step runs
        run: echo "This step ran!"
